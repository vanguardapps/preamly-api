{
    "name": "preamly-api",
    "type": "module",
    "version": "1.0.0",
    "description": "Serverless lambda functions to implement Preamly services",
    "main": "src/main.ts",
    "scripts": {
      "start-suite": "pnpm direnv && pnpm install && docker-compose up --detach --wait",
      "stop-suite": "pnpm direnv && docker-compose down && docker rmi preamly-api && docker rmi preamly-db; docker volume rm preamlydb",
      "start-dev": "pnpm direnv && npx tsx --watch src/main.ts",
      "start-db": "pnpm build-db && docker run --name preamly-db --publish $MONGO_INITDB_PORT:$MONGO_INITDB_PORT --mount volume-driver=local,type=volume,source=preamlydb,destination=/data/db preamly-db",
      "stop-db": "pnpm direnv && docker stop preamly-db; docker rm preamly-db; docker rmi preamly-db; docker volume rm preamlydb",
      "start-api": "pnpm build-api && docker run --name preamly-api --publish $API_PORT:$API_PORT preamly-api",
      "stop-api": "pnpm direnv && docker stop preamly-api; docker rm preamly-api; docker rmi preamly-api",
      "build-db": "pnpm direnv && docker build --no-cache --file db.Dockerfile --build-arg MONGO_INITDB_USERNAME=$MONGO_INITDB_USERNAME --build-arg MONGO_INITDB_PASSWORD=$MONGO_INITDB_PASSWORD --build-arg MONGO_INITDB_PORT=$MONGO_INITDB_PORT --build-arg MONGO_API_DB=$MONGO_API_DB --build-arg MONGO_API_USER=$MONGO_API_USER --build-arg MONGO_API_PASS=$MONGO_API_PASS --tag preamly-db . ",
      "build-api": "pnpm direnv && pnpm install && docker build --no-cache --file api.Dockerfile --build-arg MONGO_API_CONN_STR=$MONGO_API_CONN_STR --tag preamly-api .",
      "build": "pnpm direnv && pnpm generate-gql-types && rollup --config",
      "aws": "pnpm direnv && AWS_PROFILE=preamly aws",
      "serverless": "pnpm direnv && AWS_PROFILE=preamly serverless",
      "ci-test": "pnpm direnv && jest",
      "start-kafka": "pnpm direnv && bash src/dev-utils/start-kafka.sh",
      "stop-kafka": "pnpm direnv && ash src/dev-utils/stop-kafka.sh",
      "generate-gql-types": "pnpm direnv && graphql-codegen --config codegen.yml",
      "watch-rollup": "pnpm direnv && rollup --config --watch",
      "direnv": "direnv allow ."
    },
    "author": "Roy McClanahan",
    "license": "MIT",
    "dependencies": {
      "@apollo/server": "^4.4.1",
      "@babel/core": "^7.21.0",
      "@graphql-codegen/cli": "^3.2.1",
      "@graphql-codegen/client-preset": "^2.1.1",
      "@graphql-codegen/typescript": "^3.0.1",
      "@graphql-codegen/typescript-resolvers": "^3.1.0",
      "@graphql-typed-document-node/core": "^3.1.2",
      "@graphql-tools/schema": "^9.0.17",
      "@rollup/plugin-typescript": "^11.0.0",
      "apollo-server-express": "^3.12.0",
      "bcrypt": "^5.1.0",
      "express": "^4.18.2",
      "graphql": "^16.6.0",
      "graphql-kafka-subscriptions": "^0.4.0",
      "graphql-tag": "^2.12.6",
      "graphql-ws": "^5.11.2",
      "jsonwebtoken": "^9.0.0",
      "mongoose": "^6.8.2",
      "pluralize": "^8.0.0",
      "serverless": "^3.30.1",
      "typescript": "^4.9.5",
      "ws": "^8.11.0"
    },
    "devDependencies": {
      "@rollup/plugin-json": "^6.0.0",
      "@types/bcrypt": "^5.0.0",
      "@types/express": "^4.17.17",
      "@types/jsonwebtoken": "^9.0.1",
      "@types/micro-cors": "^0.1.2",
      "@types/mongoose": "^5.11.97",
      "@types/node": "^18.14.6",
      "@types/pluralize": "^0.0.29",
      "@types/ws": "^8.5.3",
      "eslint": "8.30.0",
      "jest": "^29.4.3",
      "rollup": "^3.19.1",
      "tsx": "^3.12.3"
    }
  }
  